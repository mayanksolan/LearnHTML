Array

const arr1 = ['a', 'b', 'c', 'x'];
const arr2 = ['m', 'n', 'x', 'y', 'r'];

1. const set1 = new Set();
	This is used to store different unique elements to the set1 and is used to find duplicates
	set1.add(arr1[i]) -> is used to add non duplicate element
	set1.has(arr2[i])	-> is used to check if the element already exist or not
	
2. Adding array to object
	let tally={}; To add array to object, loop through each element in array to add like below - 
	map[arr1[i]]=true; -> this will take the property as array value and the value is defaulted to true
	
	true
	
3. arr1.some() -> this is used to check if arr1 matches the value passed in ()
	Like arr1.some(item => arr2.includes(item)) - here arr1 each item is being checked in arr2 and return true is done if match found
	
4. str.split('') - this functions splits the string in the form of array

5. str.split('').reverse() - this function reverses the split string array

6. str.split('').reverse().join(''); - this function joins the reversed split str array

7. unshift() and shift() operate in the same way as push() and pop(), except that they add/remove values to the BEGINNING of an array.

8. slice() is used to copy different portions of an array, e.g.: 
	var fruits = ['Banana', 'Orange', 'Lemon', 'Apple', 'Mango']; 
	var citrus = fruits.slice(1, 3); …leads to… 
	var fruits = ['Banana', 'Orange', 'Lemon', 'Apple', 'Mango']; 
	var citrus = ['Orange', 'Lemon'];
	
9. splice() To Remove an element, use this syntax: 
	var fruits = ['Banana', 'Orange', 'Lemon', 'Apple', 'Mango']; 
	fruits.splice(1, 2); …leads to… 
	var fruits = ['Banana', 'Apple', 'Mango'];
	
	Add
	var fruits = ['Banana', 'Apple', 'Mango']; 
	fruits.splice(1, 0, 'Orange', 'Lemon'); …leads to… 
	var fruits = ['Banana', 'Orange', 'Lemon', 'Apple', 'Mango'];
	
10. var colors = ['red', 'orange', 'yellow', 'green']; 
	colors.forEach(function(color) { // "color" is a placeholder to represent a 
		console.log(color); 		 // singular instance of any given element in 
	}); 							 // the collection; call it whatever you want
	
11. Higher Order Functions - 

	setInterval(function() { // code that you want to run every second; }, 1000);
	
12 Undefined vs Undeclared - undefined variables are those that are not assigned any value but declared in the program. if we try to read the value, undefined is displayed
								var a;
								alert(a);	// this will output undefined
							undeclared values are those that are not declared in the program. If we try to read their values it will give runtime error.
								alert("hello"+"--"+b);	//	Uncaught ReferenceError: b is not defined